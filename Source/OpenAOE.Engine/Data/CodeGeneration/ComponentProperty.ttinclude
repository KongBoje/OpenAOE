<#@ assembly name="T4Toolbox.dll" #>
<#@ import namespace="T4Toolbox" #>
<#@ import namespace="System.Reflection" #>
<#+
public class ComponentProperty : CSharpTemplate
{
    public static ComponentProperty FromPropertyInfo(PropertyInfo info)
    {
        return new ComponentProperty(info.Name, info.PropertyType);
    }

	public string Name { get; private set; }

	public Type Type { get; private set; }

    public string GetReadOnly()
    {
	    GenerationEnvironment.Clear();

#>
<#= Type #> <#= PropertyName(Name) #> { get; } 
<#+
        return GenerationEnvironment.ToString();
    }

    public string GetWriteable()
    {
        GenerationEnvironment.Clear();
#>
<#= Type #> <#= PropertyName(Name) #> { set; } 
<#+
        return GenerationEnvironment.ToString();
    }

    ComponentProperty(string name, Type type)
    {
        Name = name;
        Type = type;
    }
}
#>